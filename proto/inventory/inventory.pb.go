// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/inventory/inventory.proto

package inventory

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Good struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BarCode              string   `protobuf:"bytes,3,opt,name=bar_code,json=barCode,proto3" json:"bar_code,omitempty"`
	Price                string   `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Standard             string   `protobuf:"bytes,5,opt,name=standard,proto3" json:"standard,omitempty"`
	Number               string   `protobuf:"bytes,6,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Good) Reset()         { *m = Good{} }
func (m *Good) String() string { return proto.CompactTextString(m) }
func (*Good) ProtoMessage()    {}
func (*Good) Descriptor() ([]byte, []int) {
	return fileDescriptor_d77ba5e53e1c0527, []int{0}
}

func (m *Good) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Good.Unmarshal(m, b)
}
func (m *Good) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Good.Marshal(b, m, deterministic)
}
func (m *Good) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Good.Merge(m, src)
}
func (m *Good) XXX_Size() int {
	return xxx_messageInfo_Good.Size(m)
}
func (m *Good) XXX_DiscardUnknown() {
	xxx_messageInfo_Good.DiscardUnknown(m)
}

var xxx_messageInfo_Good proto.InternalMessageInfo

func (m *Good) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Good) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Good) GetBarCode() string {
	if m != nil {
		return m.BarCode
	}
	return ""
}

func (m *Good) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *Good) GetStandard() string {
	if m != nil {
		return m.Standard
	}
	return ""
}

func (m *Good) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type Request struct {
	Goods                []*Good  `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_d77ba5e53e1c0527, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetGoods() []*Good {
	if m != nil {
		return m.Goods
	}
	return nil
}

type Response struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Goods                []*Good  `protobuf:"bytes,2,rep,name=goods,proto3" json:"goods,omitempty"`
	Errors               []*Error `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_d77ba5e53e1c0527, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Response) GetGoods() []*Good {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *Response) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_d77ba5e53e1c0527, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Good)(nil), "inventory.Good")
	proto.RegisterType((*Request)(nil), "inventory.Request")
	proto.RegisterType((*Response)(nil), "inventory.Response")
	proto.RegisterType((*Error)(nil), "inventory.Error")
}

func init() { proto.RegisterFile("proto/inventory/inventory.proto", fileDescriptor_d77ba5e53e1c0527) }

var fileDescriptor_d77ba5e53e1c0527 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xdf, 0xa4, 0x4d, 0x9a, 0x4e, 0xe1, 0x55, 0x46, 0x91, 0xb5, 0x17, 0x4b, 0x40, 0xe8,
	0xa9, 0x4a, 0x7b, 0x16, 0x04, 0x11, 0xf1, 0xba, 0x5f, 0x40, 0x92, 0xee, 0x20, 0x01, 0xbb, 0x93,
	0xce, 0xa6, 0x05, 0x3f, 0x85, 0x5f, 0x59, 0x32, 0x89, 0x6d, 0xbd, 0x78, 0x9b, 0xe7, 0xf7, 0x2c,
	0xf3, 0xe7, 0x59, 0xb8, 0xa9, 0x85, 0x1b, 0xbe, 0xab, 0xfc, 0x9e, 0x7c, 0xc3, 0xf2, 0x79, 0xac,
	0x16, 0xea, 0xe0, 0xf8, 0x00, 0xf2, 0xaf, 0x08, 0x86, 0x2f, 0xcc, 0x0e, 0xff, 0x43, 0x5c, 0x39,
	0x13, 0xcd, 0xa2, 0xf9, 0xd8, 0xc6, 0x95, 0x43, 0x84, 0xa1, 0x2f, 0x36, 0x64, 0x62, 0x25, 0x5a,
	0xe3, 0x35, 0x64, 0x65, 0x21, 0x6f, 0x6b, 0x76, 0x64, 0x06, 0xca, 0x47, 0x65, 0x21, 0x4f, 0xec,
	0x08, 0x2f, 0x21, 0xa9, 0xa5, 0x5a, 0x93, 0x19, 0x2a, 0xef, 0x04, 0x4e, 0x21, 0x0b, 0x4d, 0xe1,
	0x5d, 0x21, 0xce, 0x24, 0x6a, 0x1c, 0x34, 0x5e, 0x41, 0xea, 0x77, 0x9b, 0x92, 0xc4, 0xa4, 0xea,
	0xf4, 0x2a, 0xbf, 0x87, 0x91, 0xa5, 0xed, 0x8e, 0x42, 0x83, 0xb7, 0x90, 0xbc, 0x33, 0xbb, 0x60,
	0xa2, 0xd9, 0x60, 0x3e, 0x59, 0x9e, 0x2d, 0x8e, 0x87, 0xb4, 0x3b, 0xdb, 0xce, 0xcd, 0xb7, 0x90,
	0x59, 0x0a, 0x35, 0xfb, 0xa0, 0x7b, 0xec, 0x8b, 0x8f, 0xfe, 0x92, 0xcc, 0x76, 0xe2, 0xd8, 0x28,
	0xfe, 0xab, 0x11, 0xce, 0x21, 0x25, 0x11, 0x96, 0x60, 0x06, 0xfa, 0xee, 0xfc, 0xe4, 0xdd, 0x73,
	0x6b, 0xd8, 0xde, 0xcf, 0x1f, 0x20, 0x51, 0xd0, 0xc6, 0xa4, 0x71, 0xb4, 0xe3, 0x12, 0xab, 0x35,
	0xce, 0x60, 0xe2, 0x28, 0xac, 0xa5, 0xaa, 0x9b, 0x8a, 0x7d, 0x9f, 0xe0, 0x29, 0x5a, 0x3e, 0xc2,
	0xf8, 0xf5, 0xa7, 0x33, 0xae, 0x20, 0xb5, 0x54, 0xb3, 0x34, 0x88, 0x27, 0xf3, 0xfa, 0x0c, 0xa6,
	0x17, 0xbf, 0x58, 0x77, 0x65, 0xfe, 0xaf, 0x4c, 0xf5, 0x27, 0x57, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x4d, 0x5d, 0xdc, 0x9f, 0xec, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Inventory service

type InventoryClient interface {
	// 上报盘点数据
	Report(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type inventoryClient struct {
	c           client.Client
	serviceName string
}

func NewInventoryClient(serviceName string, c client.Client) InventoryClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "inventory"
	}
	return &inventoryClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *inventoryClient) Report(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Inventory.Report", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Inventory service

type InventoryHandler interface {
	// 上报盘点数据
	Report(context.Context, *Request, *Response) error
}

func RegisterInventoryHandler(s server.Server, hdlr InventoryHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Inventory{hdlr}, opts...))
}

type Inventory struct {
	InventoryHandler
}

func (h *Inventory) Report(ctx context.Context, in *Request, out *Response) error {
	return h.InventoryHandler.Report(ctx, in, out)
}
